/*
Cleemy Expenses

Welcome on the documentation for the CleemyExpenses API.


The version of the OpenAPI document: 1.0
Contact: developers@lucca.fr

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ApprovalStateId } from './approval-state-id';
import { ClaimStatusId } from './claim-status-id';
import { Currency } from './currency';
import { EntityBase } from './entity-base';
import { Enum } from './enum';
import { ExpenseClaimAuthorizedActions } from './expense-claim-authorized-actions';
import { Owner } from './owner';
import { PaymentMethodId } from './payment-method-id';
import { SourceId } from './source-id';

/**
 * When a user wants to declare his expenses, he creates an `ExpenseClaim`.  An `ExpenseClaim` is created by regrouping one or more `ExpenseTempItems` and converting them into ExpenseClaimItems.  Once created, an `ExpenseClaim` has to be approved by his manager.  Multiple `ExpenseClaims` can be created through a single request.
 * @export
 * @interface ExpenseClaim
 */
export interface ExpenseClaim {
    /**
     * 
     * @type {number}
     * @memberof ExpenseClaim
     */
    'id'?: number;
    /**
     * Name of the expense claim. If empty, it will be generated with the month and year of the last of claim item.
     * @type {string}
     * @memberof ExpenseClaim
     */
    'name'?: string;
    /**
     * Day the expenseClaim has been declared (Time zone Europe/Paris).
     * @type {string}
     * @memberof ExpenseClaim
     */
    'declaredOn': string;
    /**
     * Day the expenseClaim has been created (Time zone Europe/Paris).
     * @type {string}
     * @memberof ExpenseClaim
     */
    'createdOn': string;
    /**
     * Day the expenseClaim has been modified (Time zone Europe/Paris).
     * @type {string}
     * @memberof ExpenseClaim
     */
    'modifiedOn': string;
    /**
     * Day the expenseClaim has been paid (Time zone Europe/Paris).
     * @type {string}
     * @memberof ExpenseClaim
     */
    'paymentReceivedOn'?: string;
    /**
     * 
     * @type {SourceId}
     * @memberof ExpenseClaim
     */
    'sourceId'?: SourceId;
    /**
     * 
     * @type {Enum}
     * @memberof ExpenseClaim
     */
    'source'?: Enum;
    /**
     * 
     * @type {PaymentMethodId}
     * @memberof ExpenseClaim
     */
    'paymentMethodId'?: PaymentMethodId;
    /**
     * 
     * @type {Enum}
     * @memberof ExpenseClaim
     */
    'paymentMethod'?: Enum;
    /**
     * 
     * @type {ClaimStatusId}
     * @memberof ExpenseClaim
     */
    'statusId'?: ClaimStatusId;
    /**
     * 
     * @type {Enum}
     * @memberof ExpenseClaim
     */
    'status'?: Enum;
    /**
     * 
     * @type {ApprovalStateId}
     * @memberof ExpenseClaim
     */
    'approvalStateId'?: ApprovalStateId;
    /**
     * 
     * @type {Enum}
     * @memberof ExpenseClaim
     */
    'approvalState'?: Enum;
    /**
     * 
     * @type {ExpenseClaimAuthorizedActions}
     * @memberof ExpenseClaim
     */
    'authorizedActions'?: ExpenseClaimAuthorizedActions;
    /**
     * Unique identifier of the user that made this expenseClaim.
     * @type {number}
     * @memberof ExpenseClaim
     */
    'ownerId'?: number;
    /**
     * 
     * @type {Owner}
     * @memberof ExpenseClaim
     */
    'owner'?: Owner;
    /**
     * Unique identifier of the user that created this grouping of expense.
     * @type {number}
     * @memberof ExpenseClaim
     */
    'authorId'?: number;
    /**
     * 
     * @type {EntityBase}
     * @memberof ExpenseClaim
     */
    'author'?: EntityBase;
    /**
     * 
     * @type {number}
     * @memberof ExpenseClaim
     */
    'legalEntityId'?: number;
    /**
     * 
     * @type {EntityBase}
     * @memberof ExpenseClaim
     */
    'legalEntity'?: EntityBase;
    /**
     * 
     * @type {number}
     * @memberof ExpenseClaim
     */
    'departmentId'?: number;
    /**
     * 
     * @type {EntityBase}
     * @memberof ExpenseClaim
     */
    'department'?: EntityBase;
    /**
     * ISO code of the currency (eg: \'EUR\', \'USD\', \'GBP\', ...).
     * @type {string}
     * @memberof ExpenseClaim
     */
    'currencyId'?: string;
    /**
     * 
     * @type {Currency}
     * @memberof ExpenseClaim
     */
    'currency'?: Currency;
}

